name: CI/CD

on:
  workflow_dispatch:
  push:

jobs:
  build:
    env:
      DOCKER_ACCOUNT: sogis
      DOCKER_REPO: wgc-embedded
      DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}} 
      BUILD_NUMBER: ${{ github.run_number }}
    runs-on: ubuntu-latest
    # steps:
    #   - name: Print new build number
    #     run: echo "Build number is $BUILD_NUMBER"
    #   - uses: actions/checkout@v1
    #   - uses: actions/cache@v1
    #     with:
    #       path: ~/.m2/repository
    #       key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
    #       restore-keys: |
    #         ${{ runner.os }}-maven-
    #   - name: Set up JDK 11
    #     uses: actions/setup-java@v1
    #     with:
    #       java-version: 11
    #   - name: Build with maven 
    #     run: mvn -B package
    #   - name: Publish Docker images
    #     if: success() && github.ref == 'refs/heads/master'
    #     run: |
    #       echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
    #       docker push $DOCKER_ACCOUNT/$DOCKER_REPO:latest 
    #       docker push $DOCKER_ACCOUNT/$DOCKER_REPO:1.0.$BUILD_NUMBER
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - uses: graalvm/setup-graalvm@v1
        with:
          version: '22.1.0'
          java-version: '11'
          components: 'native-image'
          native-image-musl: 'true'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build native image
        run: |
          ./mvnw clean test
          ./mvnw -DskipTests -Penv-prod,native package
          ls -la wgc-embedded-server/target

      - name: Set up QEMU for amd64
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}
          labels: |
            org.opencontainers.image.title=${{ env.DOCKER_REPO }}
            org.opencontainers.image.version=${{ env.VERSION }}
            org.opencontainers.image.base.name=docker.io/alpine:3.16
          tags: |
            type=raw,value=${{ env.VERSION }},enable=true,priority=200
            type=raw,value=0.0,enable=true,priority=200
            type=raw,value=0,enable=true,priority=200
            type=raw,value=latest,enable=true,priority=200

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ (github.ref == 'refs/heads/master') && (github.event_name != 'pull_request') && !env.ACT }}

      - name: Multi-platform build and push
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          context: .
          file: Dockerfile.native
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          pull: true
          push: ${{ (github.ref == 'refs/heads/master') && (github.event_name != 'pull_request') && !env.ACT }}
        if: ${{ (github.ref == 'refs/heads/master') && (github.event_name != 'pull_request') && !env.ACT }}
